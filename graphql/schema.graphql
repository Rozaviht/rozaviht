### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Article {
  category: ArticleCategory
  categoryId: String!
  content: String
  id: String!
  images: Image
  published: Boolean!
  title: String!
}

type ArticleCategory {
  articles: [Article]
  id: String!
  name: String!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Image {
  alt: String
  article: Article
  articleId: String
  height: Int
  id: String!
  product: Product
  productCategory: ProductCategory
  productCategoryId: String
  url: String!
  width: Int
}

type Mutation {
  createOrder(billingForm: billingFormInputs, orderInputs: orderInputs, shippingForm: shippingFormInputs): createOrderRes
  createUser(email: String!): popUpResponse
  paymentRequest(billingForm: billingFormInputs, orderAmount: Float!, orderNumber: String!): paymentResponse
  validateBillingForm(input: billingFormInputs): checkoutFormResponse
  validateSendContactMail(input: contactMessageInputs): popUpResponse
  validateShippingForm(input: shippingFormInputs): checkoutFormResponse
}

type PaymentDetails {
  amount: Int!
  id: String!
  provider: String!
  status: PaymentStatus!
}

enum PaymentStatus {
  CLOS
  OPEN
  PEND
  PROG
}

type Product {
  description: String
  id: String!
  image: Image
  imageId: String!
  name: String!
  orders: [orderDetails]
  price: Int!
  productCategory: ProductCategory
  productCategoryId: String!
}

type ProductCategory {
  id: String!
  images: [Image]
  name: String!
  products: [Product]
}

type Query {
  getArticles: [Article]!
  getArticlesCategories: [ArticleCategory]!
  getImages: [Image]!
  getOneImage: Image!
  getProductsCategories: [ProductCategory]!
  products: [Product]!
}

type User {
  email: String!
  id: String!
  name: String
}

input billingFormInputs {
  address: String!
  addressNumber: String!
  cif: String
  city: String!
  door: String!
  email: String!
  lastName: String!
  name: String!
  phone: String!
  postalcode: String!
  provincie: String!
}

type checkoutFormResponse {
  error: Boolean!
  message: [String]!
}

input contactMessageInputs {
  mail: String!
  message: String!
  name: String!
  orderNumber: String
  subject: String!
}

type createOrderNumberRes {
  success: Boolean!
}

type createOrderRes {
  orderNumber: String!
  success: Boolean!
}

type customerInformation {
  address: String!
  addressNumber: String!
  cif: String
  city: String!
  door: String!
  email: String!
  id: String!
  lastName: String!
  name: String!
  phone: String!
  postalcode: String!
  provincie: String!
  shippingComment: String
}

type orderDetails {
  amount: Int!
  billingInfo: customerInformation
  billingInfoId: String!
  id: String!
  products: [Product]!
  shippingInfo: customerInformation
  shippingInfoId: String!
}

input orderInputs {
  amount: Int!
  products: [productInOrder]!
  shippingMethod: String!
}

type orderNumber {
  id: String!
  number: Int!
}

type paymentResponse {
  Ds_MerchantParameters: String!
  Ds_Signature: String!
  Ds_SignatureVersion: String!
}

type popUpResponse {
  error: Boolean!
  message: [String]!
}

input productInOrder {
  amount: Int!
  name: String!
}

input shippingFormInputs {
  address: String!
  addressNumber: String!
  city: String!
  door: String!
  email: String!
  lastName: String!
  name: String!
  phone: String!
  postalcode: String!
  provincie: String!
  shippingComment: String
}